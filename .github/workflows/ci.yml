name: CI/CD Pipeline

on:
  push:
    branches:
      - 'main'
      - 'feature/*'
  pull_request:
    branches:
      - 'main'

jobs:
  build_and_validate:
    runs-on: self-hosted
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm install

      - name: üß™ Run unit tests
        run: npm test
      
      - name: üì¶ Build and Tag Docker image
        run: |
          IMAGE_TAG=${{ secrets.DOCKER_USERNAME }}/node-demo-app:${{ github.sha }}
          docker build -t $IMAGE_TAG .
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: üõ°Ô∏è Run Trivy vulnerability scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_TAG }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'

      - name: Push Docker image to registry
        if: github.ref == 'refs/heads/main'
        run: |
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push ${{ env.IMAGE_TAG }}
          
  deploy:
    runs-on: self-hosted
    needs: build_and_validate
    if: github.ref == 'refs/heads/main' && github.event.workflow_run.conclusion == 'success'
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      
      - name: üöÄ Deploy to Kubernetes
        run: |
          IMAGE_TAG=${{ secrets.DOCKER_USERNAME }}/node-demo-app:${{ github.sha }}
          
          sed -i "s|image: your-docker-registry/node-demo-app:latest|image: $IMAGE_TAG|" k8s-manifests/deployment.yaml
          
          kubectl apply -f k8s-manifests/
